library(dplyr)
iris %>% filter( column("Sepal.Length") < 5 ) var <- "Sepal.Length" iris %>% filter( column(var) < 5 )
iris %>% filter( column("Sepal.Length") < 5 )
var <- "Sepal.Length"
iris %>% filter( column(var) < 5 )
iris %>% filter( column("Sepal.Length") < 5 )
var <- "Sepal.Length"
iris %>% filter( column(var) < 5 )
?difftime
library(lubridate)
ymd(Sys.Date())
ifelse(T, ymd(Sys.Date()), ymd(20150202))
now()
today()
ifelse(T, ymd(today), ymd(20150202))
ifelse(T, ymd(today()), ymd(20150202))
ifelse(T, Sys.Date(), ymd(20150202))
ifelse(T, today(), ymd(20150202))
ifelse(T, now(), ymd(20150202))
?ifelse
if T now() else 1
if (T) now() else 1
if (T) now() else ymd(20150202)
if (T) ymd(Sys.Date()) else ymd(20150202)
if (T) ymd(Sys.Date()) else ymd(20150202)
if(is.na(datetime)) ymd(Sys.Date()) else ymd(datetime)
datetime <- NA
if(is.na(datetime)) ymd(Sys.Date()) else ymd(datetime)
datetime <- 20140202
if(is.na(datetime)) ymd(Sys.Date()) else ymd(datetime)
library(foreign)
df <- read.dta('downloads/pros.dat')
df <- read.dta('downloads/cusew.dta')
head(df)
dim(df)
head(df)
summary(df)
df <- read.csv('ds1.10.csv', nrow=10)
df
df <- read.dta('downloads/copen.dta')
dim(df)
head(df)
library(readxl)
df <- read_excel('downloads/pros.xls')
df
dim(df)
head(df)
f=glm(CAPSULE~ ., data=df[, -1])
summary(f)
df <- read_excel('/Downloads/lowbwt.xls')
library(readxl)
df <- read_excel('/Downloads/lowbwt.xls')
df <- read_excel('lowbwt.xls')
df$BWT <- NULL
df$ID <- NULL
df$LOW <- as.factor(df$LOW)
df$RACE <- as.factor(df$RACE)
df$SMOKE <- as.factor(df$SMOKE)
df$PTL <- as.factor(df$PTL)
df$HT <- as.factor(df$HT)
df$UI <- as.factor(df$UI)
df$FTV <- as.factor(df$FTV)
library(ggplot2)
library(gridExtra)
p1 <- ggplot(data=df, aes(x=LOW, y=AGE, fill=LOW)) + geom_boxplot() + theme(legend.position="top")
p2 <- ggplot(data=df, aes(x=LOW, y=LWT, fill=LOW)) + geom_boxplot() + theme(legend.position="top")
grid.arrange(p1, p2, ncol = 2, nrow = 1)
install.packages("gridExtra")
library(ggplot2)
library(gridExtra)
p1 <- ggplot(data=df, aes(x=LOW, y=AGE, fill=LOW)) + geom_boxplot() + theme(legend.position="top")
p2 <- ggplot(data=df, aes(x=LOW, y=LWT, fill=LOW)) + geom_boxplot() + theme(legend.position="top")
grid.arrange(p1, p2, ncol = 2, nrow = 1)
ggplot(dat, aes(x=AGE)) +
geom_histogram(aes(y=..density..),
binwidth=.5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")
ggplot(df, aes(x=AGE)) +
geom_histogram(aes(y=..density..),
binwidth=.5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")
ggplot(df, aes(x=AGE)) +
geom_histogram(aes(y=..density..),
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")
ggplot(df, aes(x=LWT)) +
geom_histogram(aes(y=..density..),
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")
plot(df$AGE, df$LWT)
cor(df$AGE, df$LWT)
df %>% count(LOW, RACE)
library(dplyr)
df %>% count(LOW, RACE)
names(df)
df1 <- df %>% count(LOW, RACE) %>% ungroup
ggplot(data=df1, aes(x=LOW, y=n, fill=RACE)) +
geom_bar(stat="identity", position=position_dodge(), colour="black")
df2 <- df %>% count(LOW, SMOKE) %>% ungroup
ggplot(data=df2, aes(x=LOW, y=n, fill=SMOKE)) +
geom_bar(stat="identity", position=position_dodge(), colour="black")
df3 <- df %>% count(LOW, PTL) %>% ungroup
ggplot(data=df3, aes(x=LOW, y=n, fill=PTL)) +
geom_bar(stat="identity", position=position_dodge(), colour="black")
df4 <- df %>% count(LOW, HT) %>% ungroup
ggplot(data=df4, aes(x=LOW, y=n, fill=HT)) +
geom_bar(stat="identity", position=position_dodge(), colour="black")
?geom_bar
df3 <- df %>% count(LOW, PTL) %>% ungroup
ggplot(data=df3, aes(x=LOW, y=n, fill=PTL)) +
geom_bar(stat="identity", position=position_fill(), colour="black")
df1 <- df %>% count(LOW, RACE) %>% ungroup
ggplot(data=df1, aes(x=LOW, y=n, fill=RACE)) +
geom_bar(stat="identity", position=position_fill(), colour="black")
df1 <- df %>% count(LOW, RACE) %>% ungroup
ggplot(data=df1, aes(x=LOW, y=n, fill=RACE)) +
geom_bar(stat="identity", position=position_fill(), colour="black")
df2 <- df %>% count(LOW, SMOKE) %>% ungroup
ggplot(data=df2, aes(x=LOW, y=n, fill=SMOKE)) +
geom_bar(stat="identity", position=position_fill(), colour="black")
df3 <- df %>% count(LOW, PTL) %>% ungroup
ggplot(data=df3, aes(x=LOW, y=n, fill=PTL)) +
geom_bar(stat="identity", position=position_fill(), colour="black")
df4 <- df %>% count(LOW, HT) %>% ungroup
ggplot(data=df4, aes(x=LOW, y=n, fill=HT)) +
geom_bar(stat="identity", position=position_fill(), colour="black")
df4
fit0 <- glm(LOW ~ 1, family=binomial(link="logit"), data = df)
fit1 <- glm(LOW ~ ., family=binomial(link="logit"), data = df)
anova(fit0, fit1)
summary(fit1)
stepwise <- step(fit1)
summary(stepwise)
names(df)
df5 <- df %>% count(LOW, UI) %>% ungroup
ggplot(data=df5, aes(x=LOW, y=n, fill=UI)) +
geom_bar(stat="identity", position=position_fill(), colour="black")
df6 <- df %>% count(LOW, FTV) %>% ungroup
ggplot(data=df6, aes(x=LOW, y=n, fill=FTV)) +
geom_bar(stat="identity", position=position_fill(), colour="black")
plot(fit1)
plot(stepwise, which=2)
install.packages("stargazer")
library(stargazer)
stargazer(attitude)
system("pdflatex --version")
install.packages(c("BH", "curl", "ggplot2", "git2r", "htmltools", "jiebaR", "jsonlite", "lubridate", "Rcpp", "readr", "rmarkdown", "RMySQL", "roxygen2", "rstudioapi", "stringi"))
?boxplot.stats
x <- c(1:100, 1000)
(b1 <- boxplot.stats(x))
url <- "http://rstatistics.net/wp-content/uploads/2015/09/ozone.csv"
ozone <- read.csv(url)
head(ozone)
summary(ozone)
?IQR
install.packages(c("BH", "checkmate", "curl", "devtools", "digest", "knitr", "R6", "Rcpp", "rstudioapi", "shiny"))
library(Metrics)
library(Hmisc)
library(xgboost)
library(checkmate)
library(mlr)
install.packages(c("Metrics", "Hmisc"))
library(Metrics)
library(Hmisc)
packageVersion("mlr")
data(BostonHousing, package = "mlbench")
install.packages("mlbench")
data(BostonHousing, package = "mlbench")
head(BostonHousing)
regr.task = makeRegrTask(id = "bh", data = BostonHousing, target = "medv")
regr.task
str(BostonHousing)
data(BreastCancer, package = "mlbench")
df = BreastCancer
df$Id = NULL
classif.task = makeClassifTask(id = "BreastCancer", data = df, target = "Class")
classif.task
names(train)
?makeImputeWrapper
getTaskDescription(classif.task)
?makeRLearnerRegr
df <- read.table(textConnection("2048     0.000
4096     0.000
8192     0.001
16384     0.003
32768     0.010
65536     0.029
131072     0.084
262144     0.244
524288     0.707
1048576     2.046
2097152     5.923
4194304    17.134
8388608    49.623
16777216   143.578
33554432   415.561
67108864  1202.904"))
df
df[] <- lapply(df, log)
df
df <- read.table(textConnection("2048     0.000
4096     0.000
8192     0.001
16384     0.003
32768     0.010
65536     0.029
131072     0.084
262144     0.244
524288     0.707
1048576     2.046
2097152     5.923
4194304    17.134
8388608    49.623
16777216   143.578
33554432   415.561
67108864  1202.904"))
df[] <- lapply(df, log1p)
df
fit <- lm(V2 ~ V1, data=df)
fit
library(class)
?knn
?density
plot(density(c(-20, rep(0,98), 20)), xlim = c(-4, 4))  # IQR = 0
d <- density(faithful$eruptions, bw = "sj")
d
plot(d)
setwd('kaggle/NCAA/')
library(readr)
RegularSeasonCompactResults <- read_csv("RegularSeasonCompactResults.csv")
RegularSeasonDetailedResults <- read_csv("RegularSeasonDetailedResults.csv")
Seasons <- read_csv("Seasons.csv") # W和X对阵，Y和Z对阵 Dayzero+daynum是比赛日期
# 赢得球队，得分；输的球队，得分；主场or客场；打几个加时
TourneyCompactResults <- read_csv("TourneyCompactResults.csv")
SampleSubmission <- read_csv("SampleSubmission.csv")
Teams <- read_csv("Teams.csv") # 球队的名称及所对应的ID
TourneyDetailedResults <- read_csv("TourneyDetailedResults.csv")
TourneySeeds <- read_csv("TourneySeeds.csv")
TourneySlots <- read_csv("TourneySlots.csv") # slot唯一标识一场比赛
head(TourneySlots)
head(TourneySeeds)
library(dplyr)
install.packages(c("checkmate", "curl", "gridExtra", "gtable", "Hmisc", "httr", "jiebaR", "latticeExtra", "memoise", "mlr", "munsell", "NLP", "ParamHelpers", "rmarkdown", "RMySQL", "scales", "shiny", "withr", "xgboost", "xtable"))
head(TourneySeeds)
head(TourneySlots)
